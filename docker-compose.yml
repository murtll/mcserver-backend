version: '3.9'

services:
  backend:
    image: ${IMAGE}:${TAG}
    restart: always
    command: --migrate
    expose:
      - ${PORT}
    volumes:
      - sqlite-data:/app/data:rw
      - public-images:/app/public:rw
    networks:
      - traefik-net
      - backend
    environment:
      PORT: ${PORT}
      RCON_HOST: ${RCON_HOST}
      RCON_PORT: ${RCON_PORT}
      RCON_PASS: ${RCON_PASS}
      SESSION_SECRET: ${SESSION_SECRET}
      ORIGIN: ${ORIGIN}
      FK_SIGN: ${FK_SIGN}
      NODE_ENV: ${ENVIRONMENT}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    labels:
      traefik.enable: true
      traefik.http.routers.api.rule: 'Host(`${DEPLOY_HOST}`) && PathPrefix(`/api`)'
      traefik.http.routers.api.entrypoints: https
      traefik.http.routers.api.tls: true
      traefik.http.routers.api.tls.certresolver: letsencrypt
      traefik.http.services.api.loadBalancer.server.port: ${PORT}
      traefik.http.middlewares.api-stripprefix.stripprefix.prefixes: /api
      traefik.http.middlewares.api-compress.compress: true
      traefik.http.routers.api.middlewares: api-stripprefix,api-compress
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:${PORT}/
      interval: 10s
      retries: 3
      timeout: 1s
      start_period: 5s
    logging:
      driver: json-file
      options:
        max-size: 10m

  db:
    image: postgres:14-alpine
    restart: always
    expose:
      - ${DB_PORT}
    volumes:
      - postgres-data:/var/lib/postgresql/data:rw
    networks:
      - backend
    environment:
      PGPORT: ${DB_PORT}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    healthcheck:
      test: pg_isready -d ${DB_NAME}
      interval: 10s
      retries: 3
      timeout: 1s
      start_period: 5s
    logging:
      driver: json-file
      options:
        max-size: 10m

networks:
  traefik-net:
    external: true
    name: traefik-net
  backend:

volumes:
  postgres-data:
  sqlite-data:
  public-images: