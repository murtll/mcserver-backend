version: '3.9'

services:
  backend:
    image: ${IMAGE}:${TAG}
    restart: always
    expose:
      - ${PORT}
    volumes:
      - sqlite-data:/app/data:rw
      - public-images:/app/public:rw
    networks:
      - traefik-net
    environment:
      PORT: ${PORT}
      RCON_HOST: ${RCON_HOST}
      RCON_PORT: ${RCON_PORT}
      RCON_PASS: ${RCON_PASS}
      SESSION_SECRET: ${SESSION_SECRET}
      ORIGIN: ${ORIGIN}
      FK_SIGN: ${FK_SIGN}
    labels:
      traefik.enable: true
      traefik.http.routers.api.rule: 'Host(`${DEPLOY_HOST}`) && PathPrefix(`/api`)'
      traefik.http.routers.api.entrypoints: https
      traefik.http.routers.api.tls: true
      traefik.http.routers.api.tls.certresolver: letsencrypt
      traefik.http.services.api.loadBalancer.server.port: ${PORT}
      traefik.http.middlewares.api-stripprefix.stripprefix.prefixes: /api
      traefik.http.middlewares.api-compress.compress: true
      traefik.http.routers.api.middlewares: api-stripprefix,api-compress
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:${PORT}/
      interval: 10s
      retries: 3
      timeout: 1s
      start_period: 5s
    logging:
      driver: json-file
      options:
        max-size: 10m

networks:
  traefik-net:
    external: true
    name: traefik-net

volumes:
  sqlite-data:
  public-images: