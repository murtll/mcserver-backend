name: Deploy

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      tag:
        required: true
        type: string
  push:
    branches:
      - master
    paths:
      - '!**'
      - '!.**'
      - '.github/workflows/deploy.yml'
      - 'docker-compose.yml'

jobs:
  deploy:
    name: Deploy
    environment:
      name: master
      url: https://mcbrawl.ru/api/
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2

      - name: Set image name and tag
        run: |
          if [[ -n ${{ inputs.image }} ]]; then IMAGE=${{ inputs.image }}; else IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/${GITHUB_REPOSITORY##*/}"; fi
          if [[ -n ${{ inputs.tag }} ]]; then TAG=${{ inputs.tag }}; else TAG=latest; fi
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Prepare SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

      - name: Configure docker-compose.yml
        run: |
          docker compose config > docker-compose.configured.yml
        env:
          PORT: ${{ secrets.PORT }}
          RCON_HOST: ${{ secrets.RCON_HOST }}
          RCON_PORT: ${{ secrets.RCON_PORT }}
          RCON_PASS: ${{ secrets.RCON_PASS }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          ORIGIN: ${{ secrets.ORIGIN }}
          FK_SIGN: ${{ secrets.FK_SIGN }}
          IMAGE: ${{ env.IMAGE }}
          TAG: ${{ env.TAG }}

      - name: Deploy
        run: |
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER }} "mkdir -p ${{ github.repository }}"
          scp -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no docker-compose.configured.yml ${{ secrets.SSH_USER }}@${{ secrets.SERVER }}:${{ github.repository }}/docker-compose.yml
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER }} "cd ${{ github.repository }} && docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }} && docker compose pull && docker compose up -d"

      - name: Success notify
        if: ${{ success() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ✅ ${{ github.actor }} pushed changes and job ${{ github.job }} succeed.
            see workflow run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Failure notify
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ❌ ${{ github.actor }} pushed changes and job ${{ github.job }} failed.
            see workflow run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Cleanup images
        run: |
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER }} "docker image prune -af"
        continue-on-error: true